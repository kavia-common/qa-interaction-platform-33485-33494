{"is_source_file": true, "format": "JavaScript", "description": "Main React component for the Q&A platform frontend, implementing the primary UI, state management, and interactions.", "external_files": ["./services/api", "./hooks/useLocalStorage", "./components/Header", "./App.css"], "external_methods": ["askQuestion"], "published": ["App"], "classes": [], "methods": [{"name": "App()", "description": "Main functional React component serving as the application's root interface.", "scope": "", "scopeKind": ""}, {"name": "handleSubmit", "description": "Handles question submission, calls API, updates history, and manages loading/error states."}, {"name": "loadFromHistory", "description": "Restores a previous Q&A pair into the main view for display and editing."}, {"name": "deleteHistoryItem", "description": "Removes a specific Q&A history entry by its ID."}, {"name": "clearHistory", "description": "Clears all Q&A history after user confirmation."}, {"name": "copyAnswer", "description": "Copies the current answer to the clipboard and briefly displays a "}, {"name": "retry", "description": "Re-submits the current question to generate a new answer."}], "calls": ["askQuestion", "setHistory", "setQuestion", "setAnswer", "setLoading", "setError", "navigator.clipboard.writeText", "setCopied", "clearTimeout", "setTimeout", "loadFromHistory", "deleteHistoryItem", "window.confirm"], "search-terms": ["React", "Q&A interface", "API call", "local storage", "question submit", "history management", "copy answer", "retry"], "state": 2, "file_id": 2, "knowledge_revision": 48, "git_revision": "9b40a343788b26eae4d74802a045e7bac8e132a5", "revision_history": [{"23": "9920cb5349efde158414e388fd060089cdf9d7d7"}, {"26": "9920cb5349efde158414e388fd060089cdf9d7d7"}, {"34": "f95a652a05cd4e59d93c2e0c74f9781c7d59eab5"}, {"35": "1232d4d928dee470f5d780c0b41299709b94caf6"}, {"38": "1232d4d928dee470f5d780c0b41299709b94caf6"}, {"41": "85b7ccf19c2e5e026eb24580b7323490df8a88b0"}, {"42": "b65481cd9c76dd663dd3d940ee54ac081c27c556"}, {"45": "b65481cd9c76dd663dd3d940ee54ac081c27c556"}, {"46": "4dd2f326c22ee6abbf6efe278db024b7e9063fd2"}, {"48": "9b40a343788b26eae4d74802a045e7bac8e132a5"}], "ctags": [{"_type": "tag", "name": "4", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^                rows={4}$/", "language": "JavaScript", "kind": "field", "scope": "App.rows", "scopeKind": "class"}, {"_type": "tag", "name": "App", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^function App() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "answer", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^        answer: response,$/", "language": "JavaScript", "kind": "property", "scope": "App.entry", "scopeKind": "class"}, {"_type": "tag", "name": "clearHistory", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^              onClick={clearHistory}$/", "language": "JavaScript", "kind": "field", "scope": "App.onClick", "scopeKind": "class"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^      const entry = {$/", "language": "JavaScript", "kind": "class", "scope": "App", "scopeKind": "class"}, {"_type": "tag", "name": "history", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^              aria-disabled={history.length === 0}$/", "language": "JavaScript", "kind": "field", "scope": "App.aria", "scopeKind": "class"}, {"_type": "tag", "name": "history", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^              disabled={history.length === 0}$/", "language": "JavaScript", "kind": "field", "scope": "App.disabled", "scopeKind": "class"}, {"_type": "tag", "name": "history", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^              title={history.length === 0 ? 'No history to clear' : 'Clear all history'}$/", "language": "JavaScript", "kind": "field", "scope": "App.title", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^        id: `${Date.now()}-${Math.random().toString(36).slice(2)}`,$/", "language": "JavaScript", "kind": "property", "scope": "App.entry", "scopeKind": "class"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^                  aria-label={loading ? 'Asking, please wait' : 'Ask the agent'}$/", "language": "JavaScript", "kind": "field", "scope": "App.aria", "scopeKind": "class"}, {"_type": "tag", "name": "onTextareaKeyDown", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^                onKeyDown={onTextareaKeyDown}$/", "language": "JavaScript", "kind": "field", "scope": "App.onKeyDown", "scopeKind": "class"}, {"_type": "tag", "name": "question", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^                value={question}$/", "language": "JavaScript", "kind": "field", "scope": "App.value", "scopeKind": "class"}, {"_type": "tag", "name": "question", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^        question: question.trim(),$/", "language": "JavaScript", "kind": "property", "scope": "App.entry", "scopeKind": "class"}, {"_type": "tag", "name": "textareaRef", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^                ref={textareaRef}$/", "language": "JavaScript", "kind": "field", "scope": "App.ref", "scopeKind": "class"}, {"_type": "tag", "name": "timestamp", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/App.js", "pattern": "/^        timestamp: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "App.entry", "scopeKind": "class"}], "hash": "1e8b2b8d5d39477eb9e030e2a26029cf", "format-version": 4, "code-base-name": "q_and_a_frontend", "filename": "q_and_a_frontend/src/App.js", "fields": [{"name": "rows={4}", "scope": "App.rows", "scopeKind": "class", "description": "unavailable"}, {"name": "answer: response,", "scope": "App.entry", "scopeKind": "class", "description": "unavailable"}, {"name": "onClick={clearHistory}", "scope": "App.onClick", "scopeKind": "class", "description": "unavailable"}, {"name": "aria-disabled={history.length === 0}", "scope": "App.aria", "scopeKind": "class", "description": "unavailable"}, {"name": "disabled={history.length === 0}", "scope": "App.disabled", "scopeKind": "class", "description": "unavailable"}, {"name": "title={history.length === 0 ? 'No history to clear' : 'Clear all history'}", "scope": "App.title", "scopeKind": "class", "description": "unavailable"}, {"name": "id: `${Date.now()}-${Math.random().toString(36).slice(2)}`,", "scope": "App.entry", "scopeKind": "class", "description": "unavailable"}, {"name": "aria-label={loading ? 'Asking, please wait' : 'Ask the agent'}", "scope": "App.aria", "scopeKind": "class", "description": "unavailable"}, {"name": "onKeyDown={onTextareaKeyDown}", "scope": "App.onKeyDown", "scopeKind": "class", "description": "unavailable"}, {"name": "value={question}", "scope": "App.value", "scopeKind": "class", "description": "unavailable"}, {"name": "question: question.trim(),", "scope": "App.entry", "scopeKind": "class", "description": "unavailable"}, {"name": "ref={textareaRef}", "scope": "App.ref", "scopeKind": "class", "description": "unavailable"}, {"name": "timestamp: new Date().toISOString(),", "scope": "App.entry", "scopeKind": "class", "description": "unavailable"}]}