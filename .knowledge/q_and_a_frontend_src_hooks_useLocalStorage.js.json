{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React custom hook called useLocalStorage that manages a stateful value synchronized with localStorage. It facilitates persistent storage of JSON-serializable data, supporting both direct value setting and functional updates.", "external_files": ["react"], "external_methods": ["useEffect", "useRef", "useState"], "published": ["useLocalStorage"], "classes": [], "methods": [{"name": "useLocalStorage(key, initialValue)", "description": "A React hook that provides a stateful value persisted to localStorage, supporting initializing from storage, auto-saving on change, and functional updates.", "scope": "", "scopeKind": ""}], "calls": ["window.localStorage.getItem", "JSON.parse", "JSON.stringify", "window.localStorage.setItem"], "search-terms": ["React hook", "localStorage persistence", "useLocalStorage", "JSON serialization", "state management"], "state": 2, "file_id": 14, "knowledge_revision": 37, "git_revision": "", "ctags": [{"_type": "tag", "name": "useLocalStorage", "path": "/home/kavia/workspace/code-generation/qa-interaction-platform-33485-33494/q_and_a_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export function useLocalStorage(key, initialValue) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, initialValue)"}], "hash": "67fab53e2d97c660a0bee70bcb8671af", "format-version": 4, "code-base-name": "q_and_a_frontend", "filename": "q_and_a_frontend/src/hooks/useLocalStorage.js", "revision_history": [{"37": ""}]}